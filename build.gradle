plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.3'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'checkstyle'
}

group = 'com.github.dimitryivaniuta'
version = '1.0.0'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    resilience4jVersion = '2.3.0'
    springdocVersion   = '2.8.9'
}

dependencies {
    // Spring Boot WebFlux, Data JPA, Security, OAuth2 Resource Server, Cache, Redis
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.apache.commons:commons-lang3:3.18.0'
    implementation('org.flywaydb:flyway-core:11.10.2')
    implementation('org.flywaydb:flyway-database-postgresql:11.10.2')

    // Resilience4j
    implementation "io.github.resilience4j:resilience4j-spring-boot3:${resilience4jVersion}"

    // PostgreSQL
    runtimeOnly 'org.postgresql:postgresql'

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // SpringDoc OpenAPI
    implementation "org.springdoc:springdoc-openapi-starter-webflux-ui:${springdocVersion}"

    // Testing
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
}

checkstyle {
    toolVersion = '10.12.0'
    configFile = rootProject.file('checkstyle.xml')
    showViolations = true
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
    options.release = 21
}

tasks.named('test') {
    useJUnitPlatform()
}
