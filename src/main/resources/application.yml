spring:
  config:
    import:
      - "optional:file:.env[.properties]"
      - "classpath:videoâ€‘providers.yml"
  # CORE APPLICATION INFO
  application:
    name: video-metadata-backend

  # DataSource / JPA
  datasource:
    url: jdbc:postgresql://${DB_HOST:myhost}:${DB_PORT:5430}/${DB_NAME:video_db}
    username: ${DB_USER:postgres}
    password: ${DB_PASS:postgres}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      idle-timeout: 60000
      connection-timeout: 30000
      max-lifetime: 1800000
      pool-name: VideoMetadataHikari

  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: ${JPA_SHOW_SQL:false}
    properties:
      hibernate:
        format_sql: true
        jdbc:
          time_zone: UTC
        connection.provider_disables_autocommit: true
        default_batch_fetch_size: 50

  # FLYWAY
  flyway:
    enabled: true
    locations: classpath:db/migration
    baseline-on-migrate: true
    validate-on-migrate: true
    out-of-order: false

  jackson:
    time-zone: UTC
    default-property-inclusion: non_null
    serialization:
      write-dates-as-timestamps: false
    deserialization:
      adjust-dates-to-context-time-zone: false

  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      database: ${REDIS_DB:0}
      timeout: PT5S
      client-type: lettuce
      ssl:
        enabled: ${REDIS_SSL:false}

  cache:
    type: redis
    redis:
      time-to-live: PT5M
      cache-null-values: false
      enable-statistics: true

  security:
    oauth2:
      resourceserver:
        jwt:
          # Auto-configured JwtDecoder using shared secret (HS256).
          secret-key: ${JWT_SECRET:CHANGEME_BASE64_SECRET}

  graphql:
    graphiql:
      enabled: ${SPRING_GRAPHQL_GRAPHIQL_ENABLED:false}   # Enable in dev profile
#    websocket:
      # No configurable path property; default /graphql over WS if enabled.
#      connection-init-timeout: PT10S

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: ${MANAGEMENT_HEALTH_DETAILS:never}

logging:
  level:
    root: INFO
    org.springframework.security: INFO
    org.springframework.web: INFO
    org.hibernate.SQL: ${LOG_SQL_LEVEL:WARN}
    com.github.dimitryivaniuta.videometadata: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd'T'HH:mm:ss.SSSXXX} %-5level [%thread] %logger{36} - %msg%n"

################################################################
# CUSTOM CONFIGURATION PROPERTIES (Require @ConfigurationProperties)
################################################################
security:
  jwt:
    issuer: ${JWT_ISSUER:video-metadata-app}
    audience: ${JWT_AUDIENCE:video-metadata-clients}
    secret: ${JWT_SECRET:CHANGEME_BASE64_SECRET}
    expiration-seconds: ${JWT_EXPIRATION_SECONDS:3600}
    refresh-expiration-seconds: ${JWT_REFRESH_EXPIRATION_SECONDS:86400}
    clock-skew-seconds: 60

app:
  async:
    core-pool-size: ${ASYNC_CORE_POOL_SIZE:4}
    max-pool-size: ${ASYNC_MAX_POOL_SIZE:16}
    queue-capacity: ${ASYNC_QUEUE_CAPACITY:200}
    thread-name-prefix: AsyncExec-
    await-termination-seconds: 30
    wait-for-tasks-on-shutdown: true

rate-limiter:
  redis:
    prefix: ratelimit
    default-capacity: 100
    refill-tokens: 100
    refill-period: PT60S

lock:
  redis:
    prefix: lock
    ttl: PT30S
    extend-before-expiry: PT5S

token:
  redis:
    prefix: jwt:revoked
    ttl-seconds: 3600

import:
  concurrency-limit: 4
  rate-limit-per-user: 5
  window: PT60S
  duplicate-cache-ttl-ms: 600000

video:
  stats:
    cache-ttl-ms: 300000
  default-page-size: 20
  max-page-size: 100

providers:
  youtube:
    api-key: ${YOUTUBE_API_KEY:dummy_youtube_key}
    base-url: https://www.googleapis.com/youtube/v3
  vimeo:
    access-token: ${VIMEO_ACCESS_TOKEN:dummy_vimeo_token}
    base-url: https://api.vimeo.com
